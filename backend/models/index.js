const fs = require('fs');
const path = require('path');
const Sequelize = require("sequelize");
const basename = path.basename(__filename);
const dbConfig = require("../db.config.js");

const sequelize = new Sequelize(dbConfig.database, dbConfig.username, dbConfig.password, {
    host: dbConfig.host,
    dialect: dbConfig.dialect,
    operatorsAliases: false,

    pool: {
        max: dbConfig.pool.max,
        min: dbConfig.pool.min,
        acquire: dbConfig.pool.acquire,
        idle: dbConfig.pool.idle
    }
});

const db = {};

db.Sequelize = Sequelize;
db.sequelize = sequelize;

db.assertDatabaseConnectionOk = async function() {
    console.log(`Checking database connection...`);
    try {
        await sequelize.authenticate();
        console.log('Database connection OK!');
    } catch (error) {
        console.log('Unable to connect to the database:');
        console.log(error.message);
        process.exit(1);
    }
};

// Load all of the ORM model classes.
// This snippet was generated by `sequelize-cli init`.
fs
    .readdirSync(__dirname)
    .filter(file => {
        return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');
    })
    .forEach(file => {
        const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);
        db[model.name] = model;
    });

Object.keys(db).forEach(modelName => {
    if (db[modelName].associate) {
        db[modelName].associate(db);
    }
});

// // Table relationships
// db.AuthToken.belongsTo(db.User);
// db.User.hasMany(db.AuthToken);
//console.log(db)

db.init = async function() {
    await this.assertDatabaseConnectionOk();

    console.log('Starting Sequelize...');
};

module.exports = db;
